#!/usr/bin/env bash
## Title:         macOS bootstrap
## Description:   Set macOS default preferences for system bootstrapping
## Usage:         bash macos -h
## Author:        Evan Long (mail@evanrlong.com)
## Notes:         based on macOS script by Mathias Bynens (https://mths.be/macos) 

set -e

ISSUES_URL="https://github.com/evanrlong/dotfiles/issues"
COMPUTER_NAME="evanlong"

help_text() {
cat <<EOF
macOS bootstrap - Set macOS default preferences for system bootstrapping

Usage: bash $0 [options]

Options:
  -c|--cached-credentials         run script without clearing sudo credentials between runs
                                  useful for embedding into other scripts
  -d|--debug                      show addition debug output during script run
  -h|--help                       show script documentation
  -q|--quiet                      suppress all logging during script run
  -s|--sip-disabled               update preferences that require SIP be deactivated
                                  all other preferences will be unchanged
EOF
}

cleanup() {
  set +e
  if [ -n "$SUDO_WAIT_PID" ]; then
    { sudo kill "$SUDO_WAIT_PID" && wait "$SUDO_WAIT_PID"; } 2>/dev/null
  fi
  [ -z "$CACHED_CREDENTIALS" ] && sudo -k
  if [ -z "$SUCCESS" ]; then
    if [ -n "$STEP" ]; then
      echo "!!! $STEP FAILED" >&2
    else
      echo "!!! FAILED" >&2
    fi
    if [ -z "$DEBUG" ]; then
      echo "!!! Run '$0 --debug' for debugging output." >&2
      echo "!!! If you're stuck: file an issue with debugging output at:" >&2
      echo "!!!   $ISSUES_URL" >&2
    fi
  fi
}
trap "cleanup" EXIT

abort() { STEP="";   [ -n "$QUIET" ] || echo "!!! $*" >&2; exit 1; }
log()   { STEP="$*"; [ -n "$QUIET" ] || echo "--> $*"; }
logn()  { STEP="$*"; [ -n "$QUIET" ] || printf -- "--> %s " "$*"; }
logk()  { STEP="";   [ -n "$QUIET" ] || echo "OK"; }
logd()  { STEP="";   [ -n "$QUIET" ] || ( echo "--> Done!" && echo "-->" ); }
loge()  { STEP="";   [ -n "$QUIET" ] || echo "-->"; }

for ARG in "$@"; do
  case "$ARG" in
     -c|--cached-credentials)
      CACHED_CREDENTIALS="1"
      ;;
    -d|--debug)
      DEBUG="1" 
      ;;
    -h|--help)
      HELP="1"
      ;;
    -q|--quiet)
      QUIET="1"
      ;;
   -s|--sip-disabled)
      SIP_DISABLED="1"
      ;;
  esac
done

if [ -n "$HELP" ]; then
  help_text
  SUCCESS="1"
  exit 0
fi

if [ -n "$DEBUG" ] && [ -z "$QUIET" ]; then
  set -x
else
  QUIET_FLAG="-q"
fi

[ "$USER" = "root" ] && abort "Run as yourself, not root."
groups | grep -q admin || abort "Add $USER to the admin group."

[ -z "$CACHED_CREDENTIALS" ] && sudo -k
sudo -v -p "Enter your password (for sudo access): "
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
SUDO_WAIT_PID="$!"

logn "Closing System Preferences pane:"
osascript -e 'tell application "System Preferences" to quit'
logk
logd

if [ -n "$SIP_DISABLED" ]; then

  log "SIP disabled. Only preferences that are impacted by SIP will be updated."
  loge
  
  ###############################################################################
  # Desktop/User graphics                                                       #
  ###############################################################################
  
  log "Updating desktop/user graphics settings..."
  
  # Set a custom wallpaper image. `DefaultDesktop.jpg` is already a symlink, and
  # all wallpapers are in `/Library/Desktop Pictures/`. The default is `Wave.jpg`.
  logn "Setting custom wallpaper image:"
  rm -rf ~/Library/Application Support/Dock/desktoppicture.db
  sudo rm -rf /System/Library/CoreServices/DefaultDesktop.jpg
  sudo ln -s ~/.dotfiles/images/desktop_background.png /System/Library/CoreServices/DefaultDesktop.jpg
  logk
  
  # Set a custom lock screen image
  logn "Setting custom lock image:"
  rm -f /Library/Caches/com.apple.desktop.admin.png
  ln -s ~/.dotfiles/images/lock_screen_background.png /Library/Caches/com.apple.desktop.admin.png
  logk
  
  # Set a custom user account image
  logn "Setting custom user account image:"
  sudo rm -rf /Library/User\ Pictures/Custom
  sudo mkdir /Library/User\ Pictures/Custom
  sudo ln -s ~/.dotfiles/images/user_icon.png /Library/User\ Pictures/Custom/user_icon.png
  sudo dscl . delete /Users/$(id -un) jpegphoto
  sudo dscl . delete /Users/$(id -un) Picture
  sudo dscl . create /Users/evanlong Picture "/Library/User Pictures/Custom/user_icon.png"
  logk

  logd
  
fi

if [ -z "$SIP_DISABLED" ]; then

  ###############################################################################
  # General UI/UX                                                               #
  ###############################################################################
  
  log "Updating general UI/UX settings..."
  
  # Set computer name (as done via System Preferences → Sharing)
  logn "Setting computer name:"
  sudo scutil --set ComputerName "$COMPUTER_NAME"
  sudo scutil --set HostName "$COMPUTER_NAME"
  sudo scutil --set LocalHostName "$COMPUTER_NAME"
  sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "$COMPUTER_NAME"
  logk
  
  # Set standby delay to 24 hours (default is 1 hour)
  logn "Setting standby delay to 24 hours:"
  sudo pmset -a standbydelay 86400
  logk
  
  # Disable the sound effects on boot
  logn "Disabling the sound effects on boot:"
  sudo nvram SystemAudioVolume=" "
  logk
  
  # Activate dark mode
  logn "Activating dark mode:"
  dark-mode on
  logk
  
  # Hide menu bar
  logn "Hiding menu bar:"
  defaults write NSGlobalDomain _HIHideMenuBar -bool true
  logk
  
  # Disable transparency in the menu bar and elsewhere on Yosemite
  logn "Disabling transparency in the menu bar and elsewhere:"
  defaults write com.apple.universalaccess reduceTransparency -bool true
  logk
  
  # Set highlight color to Base16 gray
  logn "Setting highlight color to Base16 gray:"
  defaults write NSGlobalDomain AppleHighlightColor -string "0.845838 0.847106 0.846401"
  logk
  
  # Set window appearance to gray
  logn "Setting window appearance to gray:"
  defaults write NSGlobalDomain AppleAquaColorVariant -int 6
  logk
  
  # Set sidebar icon size to small
  logn "Setting sidebar icon size to small:"
  defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 1
  logk
  
  # Always show scrollbars
  logn "Setting scrollbars to always show:"
  defaults write NSGlobalDomain AppleShowScrollBars -string "Always"
  # Possible values: `WhenScrolling`, `Automatic` and `Always`
  logk
  
  # Disable the over-the-top focus ring animation
  logn "Disabling focus ring animation:"
  defaults write NSGlobalDomain NSUseAnimatedFocusRing -bool false
  logk
  
  # Increase window resize speed for Cocoa applications
  logn "Increasing window resize speed for Cocoa applications:"
  defaults write NSGlobalDomain NSWindowResizeTime -float 0.001
  logk
  
  # Expand save panel by default
  logn "Expanding save panel by default:"
  defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
  defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true
  logk
  
  # Expand print panel by default
  logn "Expanding print panel by default:"
  defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
  defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true
  logk
  
  # Save to disk (not to iCloud) by default
  logn "Saving to disk by default:"
  defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false
  logk
  
  # Automatically quit printer app once the print jobs complete
  logn "Setting printer app to automatically quit once print jobs complete:"
  defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true
  logk
  
  # Disable the “Are you sure you want to open this application?” dialog
  logn "Disabling open application dialog:"
  defaults write com.apple.LaunchServices LSQuarantine -bool false
  logk
  
  # Remove duplicates in the “Open With” menu (also see `lscleanup` alias)
  #logn "Removing duplicates from the \"Open With\" menu:"
  #/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user
  #logk
  
  # Display ASCII control characters using caret notation in standard text views
  # Try e.g. `cd /tmp; unidecode "\x{0000}" > cc.txt; open -e cc.txt`
  logn "Displaying ASCII control characters using caret notation in standard text views:"
  defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true
  logk
  
  # Disable Resume system-wide
  logn "Disabling Resume system-wide:"
  defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false
  logk
  
  # Disable automatic termination of inactive apps
  logn "Disabling automatic termination of inactive apps:"
  defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true
  logk
  
  # Disable the crash reporter
  logn "Disabling the crash reporter:"
  defaults write com.apple.CrashReporter DialogType -string "none"
  logk
  
  # Set Help Viewer windows to non-floating mode
  logn "Setting Help Viewer windows to non-floating mode:"
  defaults write com.apple.helpviewer DevMode -bool true
  logk
  
  # Reveal IP address, hostname, OS version, etc. when clicking the clock
  # in the login window
  logn "Setting login window to repeal IP info by clicking the clock:"
  sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName
  logk
  
  # Restart automatically if the computer freezes
  logn "Setting computer to restart automatically on freeze:"
  sudo systemsetup -setrestartfreeze on
  logk
  
  # Never go into computer sleep mode
  logn "Setting computer to never enter sleep mode:"
  sudo systemsetup -setcomputersleep Off > /dev/null
  logk
  
  # Disable Notification Center and remove the menu bar icon
  logn "Disabling Notification Center and removing the menu bar icon:"
  launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist 2> /dev/null
  logk
  
  # Disable automatic capitalization as it’s annoying when typing code
  logn "Disabling automatic capitalization:"
  defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false
  logk
  
  # Disable smart dashes as they’re annoying when typing code
  logn "Disabling smart dashes:"
  defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false
  logk
  
  # Disable automatic period substitution as it’s annoying when typing code
  logn "Disabling automatic period substitution:"
  defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false
  logk
  
  # Disable smart quotes as they’re annoying when typing code
  logn "Disabling smart quotes:"
  defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false
  logk
  
  # Disable auto-correct
  logn "Disabling auto-correct:"
  defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false
  logk

  logd
  
  ###############################################################################
  # Finder                                                                      #
  ###############################################################################

  log "Updating Finder settings..."
  
  # Allow Finder to quit
  logn "Allowing Finder to quit:"
  defaults write com.apple.finder QuitMenuItem -bool true
  logk
  
  # Disable window animations and Get Info animations
  logn "Disabling window animations and Get Info animations:"
  defaults write com.apple.finder DisableAllAnimations -bool true
  logk
  
  # Set Home directory as the default location for new Finder windows
  logn "Setting Home directory as the default location for new Finder windows:"
  defaults write com.apple.finder NewWindowTarget -string "PfLo"
  defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}"
  logk
  
  # Hide icons for hard drives, servers, and removable media on the desktop
  logn "Hiding icons for hard drives, servers, and removable media on the desktop:"
  defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
  defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
  defaults write com.apple.finder ShowMountedServersOnDesktop -bool false
  defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false
  logk
  
  # Finder: show hidden files by default
  logn "Setting Finder to show hidden files by default:"
  defaults write com.apple.finder AppleShowAllFiles -bool true
  logk
  
  # Finder: show all filename extensions
  logn "Setting Finder to show all filename extensions:"
  defaults write NSGlobalDomain AppleShowAllExtensions -bool true
  logk
  
  # Finder: show status bar
  logn "Setting Finder to show status bar:"
  defaults write com.apple.finder ShowStatusBar -bool true
  logk
  
  # Finder: show path bar
  logn "Setting Finder to show path bar:"
  defaults write com.apple.finder ShowPathbar -bool true
  logk
  
  # Display full POSIX path as Finder window title
  logn "Displaying full POSIX path as the Finder window title:"
  defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
  logk
  
  # Keep folders on top when sorting by name
  logn "Keeping folders on top when sorting by name:"
  defaults write com.apple.finder _FXSortFoldersFirst -bool true
  logk
  
  # When performing a search, search the current folder by default
  logn "Setting search to search current folder by default:"
  defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"
  logk
  
  # Disable the warning when changing a file extension
  logn "Disabling the warning when changing a file extension:"
  defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
  logk
  
  # Enable spring loading for directories
  logn "Enabling spring loading for directories:"
  defaults write NSGlobalDomain com.apple.springing.enabled -bool true
  logk
  
  # Remove the spring loading delay for directories
  logn "Removing the spring loading delay for directories:"
  defaults write NSGlobalDomain com.apple.springing.delay -float 0
  logk
  
  # Avoid creating .DS_Store files on network or USB volumes
  logn "Preventing creation of .DS_Store files:"
  defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
  defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true
  logk
  
  # Disable disk image verification
  logn "Disabling disk image verification:"
  defaults write com.apple.frameworks.diskimages skip-verify -bool true
  defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
  defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true
  logk
  
  # Prevent opening a new Finder window when a volume is mounted
  logn "Preventing opening a new Finder window when a volume is mounted:"
  defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool false
  defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool false
  defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool false
  logk
  
  # Use list view in all Finder windows by default
  # Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`
  logn "Setting Finder windows to default to list view:"
  defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"
  logk
  
  # Disable the warning before emptying the Trash
  logn "Disabling the warning before emptying the Trash:"
  defaults write com.apple.finder WarnOnEmptyTrash -bool false
  logk
  
  # Disable AirDrop over Ethernet and on unsupported Macs running Lion
  logn "Disabling AirDrop over Ethernet and on unsupported Macs:"
  defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool false
  logk
  
  # Show the ~/Library folder
  logn "Showing the ~/Library folder:"
  chflags nohidden ~/Library
  logk
  
  # Show the /Volumes folder
  logn "Showing the /Volumes folder:"
  sudo chflags nohidden /Volumes
  logk
  
  # Remove Dropbox’s green checkmark icons in Finder
  logn "Removing Dropbox's green checkmark icons in Finder:"
  file=/Applications/Dropbox.app/Contents/Resources/emblem-dropbox-uptodate.icns
  [ -e "${file}" ] && mv -f "${file}" "${file}.bak"
  logk
  
  # Expand the following File Info panes:
  # “General”, “Open with”, and “Sharing & Permissions”
  logn "Expanding File Info panes \"General\", \"Open with\", and \"Sharing & Permissions\":"
  defaults write com.apple.finder FXInfoPanesExpanded -dict \
  	General -bool true \
  	OpenWith -bool true \
  	Privileges -bool true
  logk

  logd
  
  ###############################################################################
  # Dock, Dashboard, and hot corners                                            #
  ###############################################################################

  log "Updating Dock, Dashboard, and hot corner settings..."
  
  # Automatically hide and show the Dock
  logn "Setting dock to automatically hide and show:"
  defaults write com.apple.dock autohide -bool true
  logk
  
  # Remove the auto-hiding Dock delay
  logn "Removing auto-hiding Dock delay:"
  defaults write com.apple.dock autohide-delay -float 0
  logk
  
  # Remove the animation when hiding/showing the Dock
  logn "Removing the animation when hiding/showing the Dock:"
  defaults write com.apple.dock autohide-time-modifier -float 0
  logk
  
  # Hide Dock
  logn "Hiding Dock peramenently:"
  defaults write com.apple.dock autohide-time-modifier -int 1000000000000000000000000000000000
  logk
  
  # Stop Dock icon bounce
  logn "Stopping Dock icon bounce:"
  defaults write com.apple.dock no-bouncing -bool true
  logk

  logd
  
  ###############################################################################
  # Shortcut settings                                                           #
  ###############################################################################
  
  # Disable Spotlight shortcuts
  # logn "Disabling Spotlight shortcuts:"
  # $DOTFILES_DIR/bin/macos-shortcutter disable -a "Spotlight" -s "Show Spotlight search"
  # $DOTFILES_DIR/bin/macos-shortcutter disable -a "Spotlight" -s "Show Finder search window"
  # logk
  
  # Set desktop scaling
  # logn "Setting desktop scaling:"
  # $DOTFILES_DIR/bin/display-scaler 5
  # logk

  # logd

fi
  
SUCCESS="1"
log "macOS defaults successfully set!"
