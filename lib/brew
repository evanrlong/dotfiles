#!/usr/bin/env bash
## Title:         Homebrew installer
## Description:   Install/update Homebrew and brew bundle
## Usage:         bash brew -h
## Author:        Evan Long (mail@evanrlong.com)

set -e

ISSUES_URL="https://github.com/evanrlong/dotfiles/issues"

help_text() {
cat <<EOF
Homebrew installer - Install/update Homebrew and brew bundle

Usage: bash $0 [options]

Options:
  -d|--debug                      show addition debug output during script run
  -e|--embedded                   run script in embedded mode
                                  caches sudo credentials to prevent pw prompt
  -h|--help                       show script documentation
  -q|--quiet                      suppress all logging during script run
EOF
}

cleanup() {
  set +e
  if [ -n "$SUDO_WAIT_PID" ]; then
    { sudo kill "$SUDO_WAIT_PID" && wait "$SUDO_WAIT_PID"; } 2>/dev/null
  fi
  [ -z "$EMBEDDED" ] && sudo -k
  if [ -z "$SUCCESS" ]; then
    if [ -n "$STEP" ]; then
      echo "!!! $STEP FAILED" >&2
    else
      echo "!!! FAILED" >&2
    fi
    if [ -z "$DEBUG" ]; then
      echo "!!! Run '$0 --debug' for debugging output." >&2
      echo "!!! If you're stuck: file an issue with debugging output at:" >&2
      echo "!!!   $ISSUES_URL" >&2
    fi
  fi
}
trap "cleanup" EXIT

abort() { STEP="";   [ -n "$QUIET" ] || echo "${LOG_PREFIX}!!! $*" >&2; exit 1; }
log()   { STEP="$*"; [ -n "$QUIET" ] || echo "${LOG_PREFIX}--> $*"; }
logn()  { STEP="$*"; [ -n "$QUIET" ] || printf -- "${LOG_PREFIX}--> %s " "$*"; }
logk()  { STEP="";   [ -n "$QUIET" ] || echo "OK"; }
logd()  { STEP="";   [ -n "$QUIET" ] || echo "${LOG_PREFIX}--> OK"; }

for ARG in "$@"; do
  case "$ARG" in
    -d|--debug)
      DEBUG="1" 
      ;;
    -e|--embedded)
      EMBEDDED="1"
      ;;
    -h|--help)
      HELP="1"
      ;;
    -q|--quiet)
      QUIET="1"
      ;;
  esac
done

[ -n "$EMBEDDED" ] && LOG_PREFIX="-->"

if [ -n "$HELP" ]; then
  help_text
  SUCCESS="1"
  exit 0
fi

if [ -n "$DEBUG" ] && [ -z "$QUIET" ]; then
  set -x
else
  QUIET_FLAG="-q"
fi

[ "$USER" = "root" ] && abort "Run as yourself, not root."
groups | grep -q admin || abort "Add $USER to the admin group."

[ -z "$EMBEDDED" ] && sudo -k
sudo -v -p "Enter your password (for sudo access): "
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
SUDO_WAIT_PID="$!"

set +e
logn "Checking if Homebrew is installed:"
which -s brew
[ $? = 0 ] && BREW_INSTALLED="1"
logk
set -e

if [ -z "$BREW_INSTALLED" ] ; then
  log "Homebrew is not installed"
  log "Installing Hombrew:"
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" </dev/null
  logd
else
  log "Homebrew is installed"
  log "Updating Brew:"
  brew update
  logd
fi

SUCCESS="1"
log "Homebrew setup successful!"
